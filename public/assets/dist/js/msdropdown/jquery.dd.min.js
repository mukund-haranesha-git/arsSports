// MSDropDown - jquery.dd.js
// author: Marghoob Suleman - http://www.marghoobsuleman.com/
// Date: 10 Nov, 2012
// Version: 3.0
// Revision: 16
// web: www.marghoobsuleman.com
/*
 // msDropDown is free jQuery Plugin: you can redistribute it and/or modify
 // it under the terms of the either the MIT License or the Gnu General Public License (GPL) Version 2
 */
var msBeautify = msBeautify || {};
(function($) {
    msBeautify = {
        version: '3.0',
        author: "Marghoob Suleman",
        counter: 20,
        debug: function(v) {
            if (v !== false) {
                $(".ddOutOfVision").css({
                    height: 'auto',
                    position: 'relative'
                })
            } else {
                $(".ddOutOfVision").css({
                    height: '0px',
                    position: 'absolute'
                })
            }
        },
        oldDiv: '',
        create: function(a, b, c) {
            c = c || "dropdown";
            var d;
            switch (c.toLowerCase()) {
                case "dropdown":
                case "select":
                    d = $(a).msDropdown(b).data("dd");
                    break
            }
            return d
        }
    };
    $.msDropDown = {};
    $.msDropdown = {};
    $.extend(true, $.msDropDown, msBeautify);
    $.extend(true, $.msDropdown, msBeautify);
    if ($.fn.prop === undefined) {
        $.fn.prop = $.fn.attr
    }
    if ($.fn.on === undefined) {
        $.fn.on = $.fn.bind;
        $.fn.off = $.fn.unbind
    }
    if (typeof $.expr.createPseudo === 'function') {
        $.expr[':'].Contains = $.expr.createPseudo(function(b) {
            return function(a) {
                return $(a).text().toUpperCase().indexOf(b.toUpperCase()) >= 0
            }
        })
    } else {
        $.expr[':'].Contains = function(a, i, m) {
            return $(a).text().toUpperCase().indexOf(m[3].toUpperCase()) >= 0
        }
    }

    function dd(q, t) {
        var u = $.extend(true, {
            byJson: {
                data: null,
                selectedIndex: 0,
                name: null,
                size: 0,
                multiple: false,
                width: 250
            },
            mainCSS: 'dd',
            height: 120,
            visibleRows: 7,
            rowHeight: 0,
            showIcon: true,
            zIndex: 9999,
            useSprite: false,
            animStyle: 'slideDown',
            event: 'click',
            openDirection: 'auto',
            jsonTitle: true,
            style: '',
            disabledOpacity: 0.7,
            disabledOptionEvents: true,
            on: {
                create: null,
                open: null,
                close: null,
                add: null,
                remove: null,
                change: null,
                blur: null,
                click: null,
                dblclick: null,
                mousemove: null,
                mouseover: null,
                mouseout: null,
                focus: null,
                mousedown: null,
                mouseup: null
            }
        }, t);
        var x = this;
        var y = {
            postElementHolder: '_msddHolder',
            postID: '_msdd',
            postTitleID: '_title',
            postTitleTextID: '_titleText',
            postChildID: '_child'
        };
        var z = {
            dd: u.mainCSS,
            ddTitle: 'ddTitle',
            arrow: 'arrow arrowoff',
            ddChild: 'ddChild',
            ddTitleText: 'ddTitleText',
            disabled: 'disabled',
            enabled: 'enabled',
            ddOutOfVision: 'ddOutOfVision',
            borderTop: 'borderTop',
            noBorderTop: 'noBorderTop',
            selected: 'selected',
            divider: 'divider',
            optgroup: "optgroup",
            optgroupTitle: "optgroupTitle",
            description: "description",
            label: "ddlabel",
            hover: 'hover',
            disabledAll: 'disabledAll'
        };
        var A = {
            li: '_msddli_',
            borderRadiusTp: 'borderRadiusTp',
            ddChildMore: 'border shadow',
            fnone: "fnone"
        };
        var B = false,
            _isMultiple = false,
            _isDisabled = false,
            _cacheElement = {},
            _element, _orginial, _isOpen = false;
        var C = 40,
            UP_ARROW = 38,
            LEFT_ARROW = 37,
            RIGHT_ARROW = 39,
            ESCAPE = 27,
            ENTER = 13,
            ALPHABETS_START = 47,
            SHIFT = 16,
            CONTROL = 17;
        var D = false,
            _controlHolded = false,
            _lastTarget = null,
            _forcedTrigger = false,
            _oldSelected, _isCreated = false;
        var E = document;
        var F = function(a) {
            if (_cacheElement[a] === undefined) {
                _cacheElement[a] = E.getElementById(a)
            }
            return _cacheElement[a]
        };
        var G = function(a) {
            var b = J("postChildID");
            return $("#" + b + " li." + A.li).index(a)
        };
        var H = function() {
            if (u.byJson.data) {
                var a = ["description", "image", "title"];
                try {
                    if (!q.id) {
                        q.id = "dropdown" + msBeautify.counter
                    };
                    u.byJson.data = eval(u.byJson.data);
                    var b = "msdropdown" + (msBeautify.counter++);
                    var c = {};
                    c.id = b;
                    c.name = u.byJson.name || q.id;
                    if (u.byJson.size > 0) {
                        c.size = u.byJson.size
                    };
                    c.multiple = u.byJson.multiple;
                    var d = M("select", c);
                    for (var i = 0; i < u.byJson.data.length; i++) {
                        var f = u.byJson.data[i];
                        var g = new Option(f.text, f.value);
                        for (var p in f) {
                            if (p.toLowerCase() != 'text') {
                                var h = ($.inArray(p.toLowerCase(), a) != -1) ? "data-" : "";
                                g.setAttribute(h + p, f[p])
                            }
                        };
                        d.options[i] = g
                    };
                    F(q.id).appendChild(d);
                    d.selectedIndex = u.byJson.selectedIndex;
                    $(d).css({
                        width: u.byJson.width + 'px'
                    });
                    q = d
                } catch (e) {
                    throw "There is an error in json data.";
                }
            }
        };
        var I = function() {
            H();
            if (!q.id) {
                q.id = "msdrpdd" + (msBeautify.counter++)
            };
            _element = q.id;
            x._element = _element;
            _isDisabled = F(_element).disabled;
            B = (F(_element).size > 1 || F(_element).multiple == true) ? true : false;
            var a = $("#" + _element).data("maincss");
            if (a) {
                z.dd = a
            };
            if (B) {
                _isMultiple = F(_element).multiple
            };
            cm();
            cl();
            bJ();
            cq("uiData", co());
            cq("selectedOptions", $("#" + _element + " option:selected"))
        };
        var J = function(a) {
            return _element + y[a]
        };
        var K = function(a) {
            var s = (a.style === undefined) ? "" : a.style.cssText;
            return s
        };
        var L = function(a) {
            var b = '',
                title = '',
                description = '',
                value = -1,
                text = '',
                className = '',
                imagecss = '';
            if (a !== undefined) {
                var c = a.title || "";
                if (c != "") {
                    var d = /^\{.*\}$/;
                    var e = d.test(c);
                    if (e && u.jsonTitle) {
                        var f = eval("[" + c + "]")
                    };
                    title = (e && u.jsonTitle) ? f[0].title : title;
                    description = (e && u.jsonTitle) ? f[0].description : description;
                    b = (e && u.jsonTitle) ? f[0].image : c;
                    imagecss = (e && u.jsonTitle) ? f[0].imagecss : imagecss
                };
                text = a.text || '';
                value = a.value || '';
                className = a.className || "";
                title = $(a).prop("data-title") || $(a).data("title") || (title || "");
                description = $(a).prop("data-description") || $(a).data("description") || (description || "");
                b = $(a).prop("data-image") || $(a).data("image") || (b || "");
                imagecss = $(a).prop("data-imagecss") || $(a).data("imagecss") || (imagecss || "")
            };
            var o = {
                image: b,
                title: title,
                description: description,
                value: value,
                text: text,
                className: className,
                imagecss: imagecss
            };
            return o
        };
        var M = function(a, b, c) {
            var d = E.createElement(a);
            if (b) {
                for (var i in b) {
                    switch (i) {
                        case "style":
                            d.style.cssText = b[i];
                            break;
                        default:
                            d[i] = b[i];
                            break
                    }
                }
            };
            if (c) {
                d.innerHTML = c
            };
            return d
        };
        var N = function() {
            var a = J("postElementHolder");
            if ($("#" + a).length == 0) {
                var b = {
                    style: 'height: 0px;overflow: hidden;position: absolute;',
                    className: z.ddOutOfVision
                };
                b.id = a;
                var c = M("div", b);
                $("#" + _element).after(c);
                $("#" + _element).appendTo($("#" + a))
            } else {
                $("#" + a).css({
                    height: 0,
                    overflow: 'hidden',
                    position: 'absolute'
                })
            }
        };
        var O = function() {
            var a = {
                className: z.dd + " ddcommon borderRadius"
            };
            var b = K(F(_element));
            var w = $("#" + _element).outerWidth();
            a.style = "width: " + w + "px;";
            if (b.length > 0) {
                a.style = a.style + "" + b
            };
            a.id = J("postID");
            var c = M("div", a);
            return c
        };
        var P = function() {
            var a;
            if (F(_element).selectedIndex >= 0) {
                a = F(_element).options[F(_element).selectedIndex]
            } else {
                a = {
                    value: '',
                    text: ''
                }
            }
            var b = "",
                selectedClass = "";
            var c = $("#" + _element).data("usesprite");
            if (c) {
                u.useSprite = c
            };
            if (u.useSprite != false) {
                b = " " + u.useSprite;
                selectedClass = " " + a.className
            };
            var d = M("div", {
                className: z.ddTitle + b + " " + A.borderRadiusTp
            });
            var e = M("span", {
                className: z.divider
            });
            var f = M("span", {
                className: z.arrow
            });
            var g = J("postTitleID");
            var h = M("span", {
                className: z.ddTitleText + selectedClass,
                id: g
            });
            var i = L(a);
            var j = i.image;
            var k = i.text || "";
            if (j != "" && u.showIcon) {
                var l = M("img");
                l.src = j;
                if (i.imagecss != "") {
                    l.className = i.imagecss + " "
                }
            };
            var m = M("span", {
                className: z.label
            }, k);
            d.appendChild(e);
            d.appendChild(f);
            if (l) {
                h.appendChild(l)
            };
            h.appendChild(m);
            d.appendChild(h);
            var n = M("span", {
                className: z.description
            }, i.description);
            h.appendChild(n);
            return d
        };
        var Q = function() {
            var a = J("postTitleTextID");
            var b = M("input", {
                id: a,
                type: 'text',
                value: '',
                autocomplete: 'off',
                className: 'text shadow borderRadius',
                style: 'display: none'
            });
            return b
        };
        var R = function(a) {
            var b = {};
            var c = K(a);
            if (c.length > 0) {
                b.style = c
            };
            var d = (a.disabled) ? z.disabled : z.enabled;
            d = (a.selected) ? (d + " " + z.selected) : d;
            d = d + " " + A.li;
            b.className = d;
            if (u.useSprite != false) {
                b.className = d + " " + a.className
            };
            var e = M("li", b);
            var f = L(a);
            if (f.title != "") {
                e.title = f.title
            };
            var g = f.image;
            if (g != "" && u.showIcon) {
                var h = M("img");
                h.src = g;
                if (f.imagecss != "") {
                    h.className = f.imagecss + " "
                }
            };
            if (f.description != "") {
                var i = M("span", {
                    className: z.description
                }, f.description)
            };
            var j = a.text || "";
            var k = M("span", {
                className: z.label
            }, j);
            if (h) {
                e.appendChild(h)
            };
            e.appendChild(k);
            if (i) {
                e.appendChild(i)
            } else {
                if (h) {
                    h.className = h.className + A.fnone
                }
            };
            var l = M("div", {
                className: 'clear'
            });
            e.appendChild(l);
            return e
        };
        var S = function() {
            var a = J("postChildID");
            var b = {
                className: z.ddChild + " ddchild_ " + A.ddChildMore,
                id: a
            };
            if (B == false) {
                b.style = "z-index: " + u.zIndex
            };
            var c = M("div", b);
            var d = M("ul");
            if (u.useSprite != false) {
                d.className = u.useSprite
            };
            var e = F(_element).children;
            for (var i = 0; i < e.length; i++) {
                var f = e[i];
                var g;
                if (f.nodeName.toLowerCase() == "optgroup") {
                    g = M("li", {
                        className: z.optgroup
                    });
                    var h = M("span", {
                        className: z.optgroupTitle
                    }, f.label);
                    g.appendChild(h);
                    var k = f.children;
                    var l = M("ul");
                    for (var j = 0; j < k.length; j++) {
                        var m = R(k[j]);
                        l.appendChild(m)
                    };
                    g.appendChild(l)
                } else {
                    g = R(f)
                };
                d.appendChild(g)
            };
            c.appendChild(d);
            return c
        };
        var T = function(a) {
            var b = J("postChildID");
            if (a) {
                if (a == -1) {
                    $("#" + b).css({
                        height: "auto",
                        overflow: "auto"
                    })
                } else {
                    $("#" + b).css("height", a + "px")
                };
                return false
            };
            var c;
            if (F(_element).options.length > u.visibleRows) {
                var d = parseInt($("#" + b + " li:first").css("padding-bottom")) + parseInt($("#" + b + " li:first").css("padding-top"));
                if (u.rowHeight === 0) {
                    $("#" + b).css({
                        visibility: 'hidden',
                        display: 'block'
                    });
                    u.rowHeight = Math.round($("#" + b + " li:first").height());
                    $("#" + b).css({
                        visibility: 'visible'
                    });
                    if (!B) {
                        $("#" + b).css({
                            display: 'none'
                        })
                    }
                };
                c = ((u.rowHeight + d) * u.visibleRows)
            } else if (B) {
                c = $("#" + _element).height()
            };
            return c
        };
        var U = function() {
            var h = J("postChildID");
            $("#" + h).on("click", function(e) {
                if (_isDisabled == true) return false;
                e.preventDefault();
                e.stopPropagation();
                if (B) {
                    bO()
                }
            });
            $("#" + h + " li." + z.enabled).on("click", function(e) {
                cj(this)
            });
            $("#" + h + " li." + z.enabled).on("mousedown", function(e) {
                if (_isDisabled == true) return false;
                _oldSelected = $("#" + h + " li." + z.selected);
                _lastTarget = this;
                e.preventDefault();
                e.stopPropagation();
                if (B === true) {
                    if (_isMultiple) {
                        if (D === true) {
                            $(this).addClass(z.selected);
                            var a = $("#" + h + " li." + z.selected);
                            var b = G(this);
                            if (a.length > 1) {
                                var c = $("#" + h + " li." + A.li);
                                var d = G(a[0]);
                                var f = G(a[1]);
                                if (b > f) {
                                    d = (b);
                                    f = f + 1
                                };
                                for (var i = Math.min(d, f); i <= Math.max(d, f); i++) {
                                    var g = c[i];
                                    if ($(g).hasClass(z.enabled)) {
                                        $(g).addClass(z.selected)
                                    }
                                }
                            }
                        } else if (_controlHolded === true) {
                            $(this).toggleClass(z.selected)
                        } else {
                            $("#" + h + " li." + z.selected).removeClass(z.selected);
                            $(this).addClass(z.selected)
                        }
                    } else {
                        $("#" + h + " li." + z.selected).removeClass(z.selected);
                        $(this).addClass(z.selected)
                    }
                } else {
                    $("#" + h + " li." + z.selected).removeClass(z.selected);
                    $(this).addClass(z.selected)
                }
            });
            $("#" + h + " li." + z.enabled).on("mouseenter", function(e) {
                if (_isDisabled == true) return false;
                e.preventDefault();
                e.stopPropagation();
                if (_lastTarget != null) {
                    if (_isMultiple) {
                        $(this).addClass(z.selected)
                    }
                }
            });
            $("#" + h + " li." + z.enabled).on("mouseover", function(e) {
                if (_isDisabled == true) return false;
                $(this).addClass(z.hover)
            });
            $("#" + h + " li." + z.enabled).on("mouseout", function(e) {
                if (_isDisabled == true) return false;
                $("#" + h + " li." + z.hover).removeClass(z.hover)
            });
            $("#" + h + " li." + z.enabled).on("mouseup", function(e) {
                if (_isDisabled == true) return false;
                e.preventDefault();
                e.stopPropagation();
                var a = $("#" + h + " li." + z.selected).length;
                _forcedTrigger = (_oldSelected.length != a || a == 0) ? true : false;
                bL();
                bP();
                bO();
                _lastTarget = null
            });
            if (u.disabledOptionEvents == false) {
                $("#" + h + " li." + A.li).on("click", function(e) {
                    if (_isDisabled == true) return false;
                    cc(this, "click")
                });
                $("#" + h + " li." + A.li).on("mouseenter", function(e) {
                    if (_isDisabled == true) return false;
                    cc(this, "mouseenter")
                });
                $("#" + h + " li." + A.li).on("mouseover", function(e) {
                    if (_isDisabled == true) return false;
                    cc(this, "mouseover")
                });
                $("#" + h + " li." + A.li).on("mouseout", function(e) {
                    if (_isDisabled == true) return false;
                    cc(this, "mouseout")
                });
                $("#" + h + " li." + A.li).on("mousedown", function(e) {
                    if (_isDisabled == true) return false;
                    cc(this, "mousedown")
                });
                $("#" + h + " li." + A.li).on("mouseup", function(e) {
                    if (_isDisabled == true) return false;
                    cc(this, "mouseup")
                })
            }
        };
        var V = function() {
            var a = J("postChildID");
            $("#" + a).off("click");
            $("#" + a + " li." + z.enabled).off("mouseenter");
            $("#" + a + " li." + z.enabled).off("click");
            $("#" + a + " li." + z.enabled).off("mouseover");
            $("#" + a + " li." + z.enabled).off("mouseout");
            $("#" + a + " li." + z.enabled).off("mousedown");
            $("#" + a + " li." + z.enabled).off("mouseup")
        };
        var W = function() {
            var a = J("postID");
            var b = J("postChildID");
            $("#" + a).on(u.event, function(e) {
                if (_isDisabled == true) return false;
                cd("click");
                e.preventDefault();
                e.stopPropagation();
                ci(e)
            });
            U();
            $("#" + a).on("dblclick", bV);
            $("#" + a).on("mousemove", bW);
            $("#" + a).on("mouseenter", bX);
            $("#" + a).on("mouseleave", bY);
            $("#" + a).on("mousedown", bZ);
            $("#" + a).on("mouseup", ca)
        };
        var X = function() {
            var a = J("postID");
            var b = J("postChildID");
            if (B === true) {
                $("#" + a + " ." + z.ddTitle).hide();
                $("#" + b).css({
                    display: 'block',
                    position: 'relative'
                })
            } else {
                _isMultiple = false;
                $("#" + a + " ." + z.ddTitle).show();
                $("#" + b).css({
                    display: 'none',
                    position: 'absolute'
                });
                var c = $("#" + b + " li." + z.selected)[0];
                $("#" + b + " li." + z.selected).removeClass(z.selected);
                var d = G($(c).addClass(z.selected));
                bM(d)
            };
            T(T())
        };
        var Y = function() {
            var a = J("postID");
            var b = (_isDisabled == true) ? u.disabledOpacity : 1;
            if (_isDisabled === true) {
                $("#" + a).addClass(z.disabledAll)
            } else {
                $("#" + a).removeClass(z.disabledAll)
            }
        };
        var Z = function() {
            var a = J("postTitleTextID");
            $("#" + a).on("keyup", bQ);
            X();
            Y()
        };
        var bJ = function() {
            var a = O();
            var b = P();
            a.appendChild(b);
            var c = Q();
            a.appendChild(c);
            var d = S();
            a.appendChild(d);
            $("#" + _element).after(a);
            N();
            Z();
            W();
            if (typeof u.on.create == "function") {
                u.on.create.apply(x, arguments)
            }
        };
        var bK = function(a) {
            var b = J("postChildID");
            var c = a || $("#" + b + " li." + z.selected);
            for (var i = 0; i < c.length; i++) {
                var d = G(c[i]);
                F(_element).options[d].selected = "selected"
            }
        };
        var bL = function() {
            var a = J("postChildID");
            var b = $("#" + a + " li." + z.selected);
            if (_isMultiple && (D || _controlHolded) || _forcedTrigger) {
                F(_element).selectedIndex = -1
            };
            if (b.length == 0) {
                c = -1
            } else if (b.length > 1) {
                bK(b);
                var c = $("#" + a + " li." + z.selected)
            } else {
                var c = G($("#" + a + " li." + z.selected))
            };
            if (F(_element).selectedIndex != c || _forcedTrigger) {
                bM(c);
                $("#" + _element).trigger("change")
            }
        };
        var bM = function(a, b) {
            if (a !== undefined) {
                var c, value, selectedText;
                if (a == -1) {
                    c = -1;
                    value = "";
                    selectedText = "";
                    cp(-1)
                } else {
                    if (typeof a != "object") {
                        var d = F(_element).options[a];
                        F(_element).selectedIndex = a;
                        c = a;
                        value = L(d);
                        selectedText = (a >= 0) ? F(_element).options[a].text : "";
                        cp(undefined, value);
                        value = value.value
                    } else {
                        c = F(_element).selectedIndex;
                        value = F(_element).value;
                        selectedText = F(_element).options[F(_element).selectedIndex].text || ""
                    }
                };
                cq("selectedIndex", c);
                cq("value", value);
                cq("selectedText", selectedText);
                cq("children", F(_element).children);
                cq("uiData", co());
                cq("selectedOptions", $("#" + _element + " option:selected"))
            }
        };
        var bN = function(a) {
            var b = {
                byElement: false,
                byJQuery: false,
                hasEvent: false
            };
            var c = $("#" + _element);
            if (c.prop("on" + a) != undefined) {
                b.hasEvent = true;
                b.byElement = true
            };
            var d;
            if (typeof $._data == "function") {
                d = $._data(c[0], "events")
            } else {
                d = c.data("events")
            };
            if (d && d[a]) {
                b.hasEvent = true;
                b.byJQuery = true
            };
            return b
        };
        var bO = function() {
            bP();
            $("body").on("click", cj);
            $(document).on("keydown", bT);
            $(document).on("keyup", bU)
        };
        var bP = function() {
            $("body").off("click", cj);
            $(document).off("keydown", bT);
            $(document).off("keyup", bU)
        };
        var bQ = function() {
            var a = J("postChildID");
            var b = J("postTitleTextID");
            var c = F(b).value;
            if (c.length == 0) {
                $("#" + a + " li:hidden").show();
                T(T())
            } else {
                $("#" + a + " li").hide();
                $("#" + a + " li:Contains('" + c + "')").show();
                if ($("#" + a + " li:visible").length <= u.visibleRows) {
                    T(-1)
                }
            }
        };
        var bR = function() {
            var a = J("postTitleTextID");
            if ($("#" + a + ":hidden").length > 0 && _controlHolded == false) {
                $("#" + a + ":hidden").show().val("");
                F(a).focus()
            }
        };
        var bS = function() {
            var a = J("postTitleTextID");
            if ($("#" + a + ":visible").length > 0) {
                $("#" + a + ":visible").hide();
                F(a).blur()
            }
        };
        var bT = function(a) {
            var b = J("postTitleTextID");
            switch (a.keyCode) {
                case C:
                case RIGHT_ARROW:
                    a.preventDefault();
                    a.stopPropagation();
                    cf();
                    break;
                case UP_ARROW:
                case LEFT_ARROW:
                    a.preventDefault();
                    a.stopPropagation();
                    cg();
                    break;
                case ESCAPE:
                case ENTER:
                    a.preventDefault();
                    a.stopPropagation();
                    cj();
                    break;
                case SHIFT:
                    D = true;
                    break;
                case CONTROL:
                    _controlHolded = true;
                    break;
                default:
                    if (a.keyCode >= ALPHABETS_START && B === false) {
                        bR()
                    };
                    break
            };
            if (_isDisabled == true) return false;
            cd("keydown")
        };
        var bU = function(a) {
            switch (a.keyCode) {
                case SHIFT:
                    D = false;
                    break;
                case CONTROL:
                    _controlHolded = false;
                    break
            };
            if (_isDisabled == true) return false;
            cd("keyup")
        };
        var bV = function(a) {
            if (_isDisabled == true) return false;
            cd("dblclick")
        };
        var bW = function(a) {
            if (_isDisabled == true) return false;
            cd("mousemove")
        };
        var bX = function(a) {
            if (_isDisabled == true) return false;
            a.preventDefault();
            cd("mouseover")
        };
        var bY = function(a) {
            if (_isDisabled == true) return false;
            a.preventDefault();
            cd("mouseout")
        };
        var bZ = function(a) {
            if (_isDisabled == true) return false;
            cd("mousedown")
        };
        var ca = function(a) {
            if (_isDisabled == true) return false;
            cd("mouseup")
        };
        var cb = function(a, b) {
            var c = {
                byElement: false,
                byJQuery: false,
                hasEvent: false
            };
            if ($(a).prop("on" + b) != undefined) {
                c.hasEvent = true;
                c.byElement = true
            };
            var d = $(a).data("events");
            if (d && d[b]) {
                c.hasEvent = true;
                c.byJQuery = true
            };
            return c
        };
        var cc = function(a, b) {
            if (u.disabledOptionEvents == false) {
                var c = F(_element).options[G(a)];
                if (cb(c, b).hasEvent === true) {
                    if (cb(c, b).byElement === true) {
                        c["on" + b]()
                    };
                    if (cb(c, b).byJQuery === true) {
                        switch (b) {
                            case "keydown":
                            case "keyup":
                                break;
                            default:
                                $(c).trigger(b);
                                break
                        }
                    };
                    return false
                }
            }
        };
        var cd = function(a) {
            if (typeof u.on[a] == "function") {
                u.on[a].apply(this, arguments)
            };
            if (bN(a).hasEvent === true) {
                if (bN(a).byElement === true) {
                    F(_element)["on" + a]()
                };
                if (bN(a).byJQuery === true) {
                    switch (a) {
                        case "keydown":
                        case "keyup":
                            break;
                        default:
                            $("#" + _element).trigger(a);
                            break
                    }
                };
                return false
            }
        };
        var ce = function(a) {
            var b = J("postChildID");
            a = (a !== undefined) ? a : $("#" + b + " li." + z.selected);
            if (a.length > 0) {
                var c = parseInt(($(a).position().top));
                var d = parseInt($("#" + b).height());
                if (c > d) {
                    var e = c + $("#" + b).scrollTop() - (d / 2);
                    $("#" + b).animate({
                        scrollTop: e
                    }, 500)
                }
            }
        };
        var cf = function() {
            var b = J("postChildID");
            var c = $("#" + b + " li:visible." + A.li);
            var d = $("#" + b + " li:visible." + z.selected);
            d = (d.length == 0) ? c[0] : d;
            var e = $("#" + b + " li:visible." + A.li).index(d);
            if ((e < c.length - 1)) {
                e = getNext(e);
                if (e < c.length) {
                    if (!D || !B || !_isMultiple) {
                        $("#" + b + " ." + z.selected).removeClass(z.selected)
                    };
                    $(c[e]).addClass(z.selected);
                    cp(e);
                    if (B == true) {
                        bL()
                    };
                    ce($(c[e]))
                };
                if (!B) {
                    ch()
                }
            };

            function getNext(a) {
                a = a + 1;
                if (a > c.length) {
                    return a
                };
                if ($(c[a]).hasClass(z.enabled) === true) {
                    return a
                };
                return a = getNext(a)
            }
        };
        var cg = function() {
            var b = J("postChildID");
            var c = $("#" + b + " li:visible." + z.selected);
            var d = $("#" + b + " li:visible." + A.li);
            var e = $("#" + b + " li:visible." + A.li).index(c[0]);
            if (e >= 0) {
                e = getPrev(e);
                if (e >= 0) {
                    if (!D || !B || !_isMultiple) {
                        $("#" + b + " ." + z.selected).removeClass(z.selected)
                    };
                    $(d[e]).addClass(z.selected);
                    cp(e);
                    if (B == true) {
                        bL()
                    };
                    if (parseInt(($(d[e]).position().top + $(d[e]).height())) <= 0) {
                        var f = ($("#" + b).scrollTop() - $("#" + b).height()) - $(d[e]).height();
                        $("#" + b).animate({
                            scrollTop: f
                        }, 500)
                    }
                };
                if (!B) {
                    ch()
                }
            };

            function getPrev(a) {
                a = a - 1;
                if (a < 0) {
                    return a
                };
                if ($(d[a]).hasClass(z.enabled) === true) {
                    return a
                };
                return a = getPrev(a)
            }
        };
        var ch = function() {
            var a = J("postID");
            var b = J("postChildID");
            var c = $("#" + a).offset();
            var d = $("#" + a).height();
            var e = $(window).height();
            var f = $(window).scrollTop();
            var g = $("#" + b).height();
            var h = $("#" + a).height();
            if ((e + f) < Math.floor(g + d + c.top) || u.openDirection.toLowerCase() == 'alwaysup') {
                h = g;
                $("#" + b).css({
                    top: "-" + h + "px",
                    display: 'block',
                    zIndex: u.zIndex
                });
                $("#" + a).removeClass("borderRadius borderRadiusTp").addClass("borderRadiusBtm");
                var h = $("#" + b).offset().top;
                if (h < -10) {
                    $("#" + b).css({
                        top: (parseInt($("#" + b).css("top")) - h + 20 + f) + "px",
                        zIndex: u.zIndex
                    });
                    $("#" + a).removeClass("borderRadiusBtm borderRadiusTp").addClass("borderRadius")
                }
            } else {
                $("#" + b).css({
                    top: h + "px",
                    zIndex: u.zIndex
                });
                $("#" + a).removeClass("borderRadius borderRadiusBtm").addClass("borderRadiusTp")
            }
        };
        var ci = function(e) {
            if (_isDisabled == true) return false;
            var a = J("postID");
            var b = J("postChildID");
            if (!_isOpen) {
                _isOpen = true;
                if (msBeautify.oldDiv != '') {
                    $("#" + msBeautify.oldDiv).css({
                        display: "none"
                    })
                };
                msBeautify.oldDiv = b;
                $("#" + b + " li:hidden").show();
                ch();
                var c = u.animStyle;
                if (c == "" || c == "none") {
                    $("#" + b).css({
                        display: "block"
                    });
                    ce();
                    if (typeof u.on.open == "function") {
                        var d = co();
                        u.on.open(d.data, d.ui)
                    }
                } else {
                    $("#" + b)[c]("fast", function() {
                        ce();
                        if (typeof u.on.open == "function") {
                            var d = co();
                            u.on.open(d.data, d.ui)
                        }
                    })
                };
                bO()
            } else {
                if (u.event !== 'mouseover') {
                    cj()
                }
            }
        };
        var cj = function(e) {
            _isOpen = false;
            var a = J("postID");
            var b = J("postChildID");
            if (B === false) {
                $("#" + b).css({
                    display: "none"
                });
                $("#" + a).removeClass("borderRadiusTp borderRadiusBtm").addClass("borderRadius");
                bL()
            };
            bP();
            if (typeof u.on.close == "function") {
                var d = co();
                u.on.close(d.data, d.ui)
            };
            bS();
            T(T());
            $("#" + b).css({
                zIndex: 1
            })
        };
        var ck = function() {
            if (_orginial.onchange != null) {
                _orginial.onchange.apply(this, arguments)
            };
            x.selectedIndex = this.selectedIndex;
            x.value = this.value;
            x.selectedText = (this.selectedIndex >= 0) ? this.options[this.selectedIndex].text : "";
            if (typeof u.on.change == "function") {
                var d = co();
                u.on.change(d.data, d.ui)
            }
        };
        var cl = function() {
            F(_element).onchange = ck
        };
        var cm = function() {
            _orginial = $.extend(true, {}, F(_element));
            for (var i in _orginial) {
                if (typeof _orginial[i] != "function") {
                    x[i] = _orginial[i]
                }
            };
            x.selectedText = (_orginial.selectedIndex >= 0) ? _orginial.options[_orginial.selectedIndex].text : "";
            x.version = msBeautify.version;
            x.author = msBeautify.author
        };
        var cn = function(a) {
            if (a != null && typeof a != "undefined") {
                var b = J("postChildID");
                var c = L(a);
                var d = $("#" + b + " li." + A.li + ":eq(" + (a.index) + ")");
                return {
                    data: c,
                    ui: d,
                    option: a,
                    index: a.index
                }
            };
            return null
        };
        var co = function() {
            var a = J("postChildID");
            var b = F(_element);
            var c, ui, option, index;
            if (b.selectedIndex == -1) {
                c = null;
                ui = null;
                option = null;
                index = -1
            } else {
                ui = $("#" + a + " li." + z.selected);
                if (ui.length > 1) {
                    var d = [],
                        op = [],
                        ind = [];
                    for (var i = 0; i < ui.length; i++) {
                        var e = G(ui[i]);
                        d.push(e);
                        op.push(b.options[e])
                    };
                    c = d;
                    option = op;
                    index = d
                } else {
                    option = b.options[b.selectedIndex];
                    c = L(option);
                    index = b.selectedIndex
                }
            };
            return {
                data: c,
                ui: ui,
                index: index,
                option: option
            }
        };
        var cp = function(a, b) {
            var c = J("postTitleID");
            var d = {};
            if (a == -1) {
                d.text = "&nbsp;";
                d.className = "";
                d.description = "";
                d.image = ""
            } else if (typeof a != "undefined") {
                var e = F(_element).options[a];
                d = L(e)
            } else {
                d = b
            };
            $("#" + c).find("." + z.label).html(d.text);
            F(c).className = z.ddTitleText + " " + d.className;
            if (d.description != "") {
                $("#" + c).find("." + z.description).html(d.description).show()
            } else {
                $("#" + c).find("." + z.description).html("").hide()
            };
            var f = $("#" + c).find("img");
            if (f.length > 0) {
                $(f).remove()
            };
            if (d.image != "" && u.showIcon) {
                f = M("img", {
                    src: d.image
                });
                $("#" + c).prepend(f);
                if (d.imagecss != "") {
                    f.className = d.imagecss + " "
                };
                if (d.description == "") {
                    f.className = f.className + A.fnone
                }
            }
        };
        var cq = function(p, v) {
            x[p] = v
        };
        var cr = function(a, b, i) {
            var c = J("postChildID");
            var d = false;
            switch (a) {
                case "add":
                    var e = R(b || F(_element).options[i]);
                    var f;
                    if (arguments.length == 3) {
                        f = i
                    } else {
                        f = $("#" + c + " li." + A.li).length - 1
                    };
                    if (f < 0 || !f) {
                        $("#" + c + " ul").append(e)
                    } else {
                        var g = $("#" + c + " li." + A.li)[f];
                        $(g).before(e)
                    };
                    V();
                    U();
                    if (u.on.add != null) {
                        u.on.add.apply(this, arguments)
                    };
                    break;
                case "remove":
                    d = $($("#" + c + " li." + A.li)[i]).hasClass(z.selected);
                    $("#" + c + " li." + A.li + ":eq(" + i + ")").remove();
                    var h = $("#" + c + " li." + z.enabled);
                    if (d == true) {
                        if (h.length > 0) {
                            $(h[0]).addClass(z.selected);
                            var j = $("#" + c + " li." + A.li).index(h[0]);
                            bM(j)
                        }
                    };
                    if (h.length == 0) {
                        bM(-1)
                    };
                    if ($("#" + c + " li." + A.li).length < u.visibleRows && !B) {
                        T(-1)
                    };
                    if (u.on.remove != null) {
                        u.on.remove.apply(this, arguments)
                    };
                    break
            }
        };
        this.act = function() {
            var a = arguments[0];
            Array.prototype.shift.call(arguments);
            switch (a) {
                case "add":
                    x.add.apply(this, arguments);
                    break;
                case "remove":
                    x.remove.apply(this, arguments);
                    break;
                default:
                    try {
                        F(_element)[a].apply(F(_element), arguments)
                    } catch (e) {};
                    break
            }
        };
        this.add = function() {
            var a, value, title, image, description;
            var b = arguments[0];
            if (b instanceof HTMLOptionElement) {
                opt = b
            } else if (typeof b == "string") {
                a = b;
                value = a;
                opt = new Option(a, value)
            } else {
                a = b.text || '';
                value = b.value || a;
                title = b.title || '';
                image = b.image || '';
                description = b.description || '';
                opt = new Option(a, value);
                $(opt).data("description", description);
                $(opt).data("image", image);
                $(opt).data("title", title)
            };
            arguments[0] = opt;
            F(_element).add.apply(F(_element), arguments);
            cq("children", F(_element)["children"]);
            cq("length", F(_element).length);
            cr("add", opt, arguments[1])
        };
        this.remove = function(i) {
            F(_element).remove(i);
            cq("children", F(_element)["children"]);
            cq("length", F(_element).length);
            cr("remove", undefined, i)
        };
        this.set = function(a, b) {
            if (typeof a == "undefined" || typeof b == "undefined") return false;
            a = a.toString();
            try {
                cq(a, b)
            } catch (e) {};
            switch (a) {
                case "size":
                    F(_element)[a] = b;
                    if (b == 0) {
                        F(_element).multiple = false
                    };
                    B = (F(_element).size > 1 || F(_element).multiple == true) ? true : false;
                    X();
                    break;
                case "multiple":
                    B = (F(_element).size > 1 || F(_element).multiple == true) ? true : false;
                    _isMultiple = F(_element).multiple;
                    X();
                    cq(a, b);
                    break;
                case "disabled":
                    F(_element)[a] = b;
                    _isDisabled = b;
                    Y();
                    break;
                case "selectedIndex":
                case "value":
                    F(_element)[a] = b;
                    var c = J("postChildID");
                    $("#" + c + " li." + A.li).removeClass(z.selected);
                    $($("#" + c + " li." + A.li)[F(_element).selectedIndex]).addClass(z.selected);
                    bM(F(_element).selectedIndex);
                    break;
                case "length":
                    var c = J("postChildID");
                    if (b < F(_element).length) {
                        F(_element)[a] = b;
                        if (b == 0) {
                            $("#" + c + " li." + A.li).remove();
                            bM(-1)
                        } else {
                            $("#" + c + " li." + A.li + ":gt(" + (b - 1) + ")").remove();
                            if ($("#" + c + " li." + z.selected).length == 0) {
                                $("#" + c + " li." + z.enabled + ":eq(0)").addClass(z.selected)
                            }
                        };
                        cq(a, b);
                        cq("children", F(_element)["children"])
                    };
                    break;
                case "id":
                    break;
                default:
                    try {
                        F(_element)[a] = b;
                        cq(a, b)
                    } catch (e) {};
                    break
            }
        };
        this.get = function(a) {
            return x[a] || F(_element)[a]
        };
        this.visible = function(a) {
            var b = J("postID");
            if (a == true) {
                $("#" + b).show()
            } else if (a == false) {
                $("#" + b).hide()
            } else {
                return $("#" + b).css("display")
            }
        };
        this.debug = function(v) {
            msBeautify.debug(v)
        };
        this.close = function() {
            cj()
        };
        this.open = function() {
            ci()
        };
        this.showRows = function(r) {
            if (typeof r == "undefined" || r == 0) {
                return false
            };
            u.visibleRows = r;
            T(T())
        };
        this.visibleRows = this.showRows;
        this.on = function(a, b) {
            $("#" + _element).on(a, b)
        };
        this.off = function(a, b) {
            $("#" + _element).off(a, b)
        };
        this.addMyEvent = this.on;
        this.getData = function() {
            return co()
        };
        this.namedItem = function() {
            var a = F(_element).namedItem.apply(F(_element), arguments);
            return cn(a)
        };
        this.item = function() {
            var a = F(_element).item.apply(F(_element), arguments);
            return cn(a)
        };
        this.destory = function() {
            var a = J("postElementHolder");
            var b = J("postID");
            $("#" + b + ", #" + b + " *").off();
            $("#" + b).remove();
            $("#" + _element).parent().replaceWith($("#" + _element));
            F(_element).onchange = function() {
                if (_orginial.onchange != null) {
                    _orginial.onchange.apply(this, arguments)
                }
            };
            $("#" + _element).data("dd", null)
        };
        I()
    };
    $.fn.extend({
        msDropDown: function(b) {
            return this.each(function() {
                if (!$(this).data('dd')) {
                    var a = new dd(this, b);
                    $(this).data('dd', a)
                }
            })
        }
    });
    $.fn.msDropdown = $.fn.msDropDown
})(jQuery);